(library (ffi)
  (export call-bytevector-with-ptr call-with-ptr)
  (import (chezscheme))
  (define (call-with-ptr n k)
    (let ([p #f])
      (dynamic-wind
        (lambda () (set! p (foreign-alloc n)))
        (lambda () (assert p) (k p))
        (lambda () (when p (foreign-free p))))))
  (define (call-bytevector-with-ptr bv k)
    (let ([n (bytevector-length bv)])
      (define (f p)
        (do ([i 0 (add1 i)])
            ((>= i n) (k p n))
          (foreign-set! 'unsigned-8 p i (bytevector-u8-ref bv i))))
      (call-with-ptr n f))))
